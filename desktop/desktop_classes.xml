<?xml version="1.0" encoding="iso-8859-1"?>

<!-- 
  Please see the license.html file included with this distribution for 
  attribution and copyright information.
-->

<root>
    <windowclass name="chat">
		<frame>chatbox</frame>
		<noclose />
		<sizelimits>
			<dynamic />
			<minimum>
				<width>350</width>
				<height>350</height>
			</minimum>
			<maximum>
				<height>10000</height>
			</maximum>
		</sizelimits>
		<sheetdata>
			<chatwindow name="chat">
				<bounds>42,30,-30,-65</bounds>
				<droptypes>
					<type>dice</type>
					<type>number</type>
					<type>string</type>
					<type>fullattack</type>
				</droptypes>
				<stateframe>
					<drophilight>
						<name>chatboxhilight</name>
						<offset>6,5,2,11</offset>
					</drophilight>
				</stateframe>
				<linkcolor>0000FF</linkcolor>
				<icon link="button_openwindow" emptylink="button_emptytarget" chat="button_speak" />
				<linkicon normal="button_openwindow" pressed="button_emptytarget" />
				<script file="desktop/scripts/chat_chatmod.lua" />
			</chatwindow>
			<scrollbar>
				<bounds>-30,35,16,-71</bounds>
				<target>chat</target>
			</scrollbar>
			<genericcontrol>
				<anchored>
					<to>chat</to>
					<position>insidetopright</position>
					<size>
						<width>60</width>
						<height>61</height>
					</size>
					</anchored>
				<icon>indicator_chatwait</icon>
				<invisible />
				<script>
					function onUserStateChange(username, statename, state)
						if username == "" then
							if statename == "typing" then
								setVisible(true);
							elseif statename == "active" or statename == "idle" then
								setVisible(false);
							end
						end
					end
			
					function onInit()
						if super and super.onInit then
							super.onInit();
						end
						User.onUserStateChange = onUserStateChange;
					end
				</script>
			</genericcontrol>
			<chatentry name="entry">
				<anchored>
					<left>
						<anchor>left</anchor>
						<offset>44</offset>
					</left>
					<top>
						<anchor>bottom</anchor>
						<offset>-40</offset>
					</top>
					<right>
						<anchor>right</anchor>
						<offset>-70</offset>
					</right>
					<bottom>
						<anchor>bottom</anchor>
						<offset>-20</offset>
					</bottom>
				</anchored>
				<chatwindow>chat</chatwindow>
				<font>chatfont</font>
				<script file="desktop/scripts/chat_entry.lua" />
			</chatentry>
			<genericcontrol name="mode">
				<anchored>
					<left>
						<anchor>right</anchor>
						<offset>-70</offset>
					</left>
					<top>
						<anchor>bottom</anchor>
						<offset>-47</offset>
					</top>
					<size>
						<width>43</width>
						<height>24</height>
					</size>
				</anchored>
				<icon>chat_speak</icon>
				<script file="desktop/scripts/chat_mode.lua" />
			</genericcontrol>

		</sheetdata>
	</windowclass>

	<windowclass name="identitylist">
		<sizelimits>
			<minimum>
				<height>20</height>
			</minimum>
		</sizelimits>
		<script file="desktop/scripts/identitylist.lua" />
		<sheetdata>
			<genericcontrol name="anchor">
				<bounds>0,0,1,1</bounds>
			</genericcontrol>
		</sheetdata>
	</windowclass>

	<windowclass name="characterlist">
		<script file="desktop/scripts/characterlist.lua" />
		<sheetdata>
			<genericcontrol name="anchor">
				<bounds>5,5,1,1</bounds>
			</genericcontrol>
		</sheetdata>
	</windowclass>
  
	<windowclass name="gmshortcuts">
		<sizelimits>
			<maximum>
				<height>10000</height>
			</maximum>
		</sizelimits>
		<script>
			function onInit()
				DesktopManager.registerContainerWindow(self);
			end
		</script>
		<sheetdata>
		</sheetdata>
	</windowclass>

	<windowclass name="playershortcuts">
		<sizelimits>
			<maximum>
				<height>10000</height>
			</maximum>
		</sizelimits>
		<script>
			function onInit()
				DesktopManager.registerContainerWindow(self);
			end
		</script>
		<sheetdata>
		</sheetdata>
	</windowclass>

	<windowclass name="localshortcuts">
		<sizelimits>
			<maximum>
				<height>10000</height>
			</maximum>
		</sizelimits>
		<script>
			function onInit()
				DesktopManager.registerContainerWindow(self);
			end
		</script>
		<sheetdata>
		</sheetdata>
	</windowclass>

	<windowclass name="modifierstack">
		<sizelimits>
			<minimum>
				<width>64</width>
				<height>57</height>
			</minimum>
		</sizelimits>
		<noclose />
		<script>
			function onInit()
				if super and super.onInit then
					super.onInit();
				end
				ModifierStack.registerControl(self);
			end
		  
			function onClose()
				ModifierStack.registerControl(nil);
			end
		</script>
		<sheetdata>
			<genericcontrol name="base">
				<bounds>0,5,64,52</bounds>
				<icon>modcollector</icon>
				<counters>
					<icon>modcollector_counter</icon>
					<offset>
						<x>11</x>
						<y>47</y>
					</offset>
					<spacing>9</spacing>
					<hoversize>4</hoversize>
				</counters>
				<script file="desktop/scripts/modifierstack_base.lua" />
			</genericcontrol>
			<numbercontrolX name="modifier">
				<bounds>5,0,54,42</bounds>
				<font>modcollector</font>
				<displaysign />
				<keyeditframe>
					<name>modstackfocus</name>
					<offset>-1,-11,-1,-8</offset>
				</keyeditframe>
				<droptypes>
					<type>number</type>
				</droptypes>
				<stateframe>
					<drophilight>
						<name>modstackfocus</name>
						<offset>0,-11,0,3</offset>
					</drophilight>
				</stateframe>
				<script file="desktop/scripts/modifierstack_modifier.lua" />
			</numbercontrolX>
			<stringcontrolX name="label">
				<bounds>5,34,54,12</bounds>
				<font>modcollectorlabel</font>
				<static>Modifier</static>
				<center />
				<script>
					function onDrop(x, y, draginfo)
						return window.base.onDrop(x, y, draginfo);
					end
				</script>
			</stringcontrolX>
		</sheetdata>
	</windowclass>

	<windowclass name="RMDice">
		<frame>indexbox</frame>
		<sizelimits>
			<minimum>
				<height>80</height>
				<width>120</width>
			</minimum>
		</sizelimits>
		<noclose />
		<script>
			local resizing = false;
			
			function onInit()
				if User.isLocal() then
					return;
				end
				if super and super.onInit then
					super.onInit();
				end
				Desktop.registerRMDiceWindow(self);
				if User.isHost() then
					Desktop.getCurrentHostColors();
				else
					Desktop.getCurrentColors();
				end
				self.onMove = moved;
				registerMenuItem("Set Vertical", "verticaldice", 3);
			end
			
			function moved()
				local w, h = getSize();
				if w == 130 then
					d100b.setAnchor("top", "d100a", "bottom", "relative", 5);
					d100b.setAnchor("left", "d100a", "left");
					d100c.setAnchor("top", "d100b", "bottom", "relative", 5);
					d100c.setAnchor("left", "d100b", "left");
					resetMenuItems();
					registerMenuItem("Horizontal Dice", "horizontaldice", 3);
				else
					d100b.setAnchor("top", "d100a", "top");
					d100b.setAnchor("left", "d100a", "right", "relative", 5);
					d100c.setAnchor("top", "d100b", "top");
					d100c.setAnchor("left", "d100b", "right", "relative", 5);
					resetMenuItems();
					registerMenuItem("Vertical Dice", "verticaldice", 3);
				end
			end
			
			function onMenuSelection(item)
				if item == 3 or item == 2 then
					local w, h = getSize();
					if w == 340 then
						setSize(130, 190);
						d100b.setAnchor("top", "d100a", "bottom", "relative", 5);
						d100b.setAnchor("left", "d100a", "left");
						d100c.setAnchor("top", "d100b", "bottom", "relative", 5);
						d100c.setAnchor("left", "d100b", "left");
						resetMenuItems();
						registerMenuItem("Horizontal Dice", "horizontaldice", 3);
					else
						setSize(340, 80);
						d100b.setAnchor("top", "d100a", "top");
						d100b.setAnchor("left", "d100a", "right", "relative", 5);
						d100c.setAnchor("top", "d100b", "top");
						d100c.setAnchor("left", "d100b", "right", "relative", 5);
						resetMenuItems();
						registerMenuItem("Vertical Dice", "verticaldice", 3);
					end
				end
			end
			
			function setDiceColor(colorstr, blacktext)
				d100a.setDiceColor(colorstr, blacktext);
				d100b.setDiceColor(colorstr, blacktext);
				d100c.setDiceColor(colorstr, blacktext);
			end
		</script>
		<sheetdata>
			<genericcontrol name="d100a">
				<anchored>
					<top>
						<anchor>top</anchor>
						<offset>17</offset>
					</top>
					<left>
						<anchor>left</anchor>
						<offset>15</offset>
					</left>
					<size>
						<width>100</width>
						<height>50</height>
					</size>
				</anchored>
				<icon>d100_base</icon>
				<dietype>Closed</dietype>
				<script file="desktop/scripts/desktoppanel_d100.lua" />
			</genericcontrol>
			<genericcontrol name="d100b">
				<anchored>
					<top>
						<parent>d100a</parent>
						<anchor>top</anchor>
					</top>
					<left>
						<parent>d100a</parent>
						<anchor>right</anchor>
						<offset>5</offset>
					</left>
					<size>
						<width>100</width>
						<height>50</height>
					</size>
				</anchored>
				<icon>d100_base</icon>
				<dietype>OpenEnded</dietype>
				<script file="desktop/scripts/desktoppanel_d100.lua" />
			</genericcontrol>
			<genericcontrol name="d100c">
				<anchored>
					<top>
						<parent>d100b</parent>
						<anchor>top</anchor>
					</top>
					<left>
						<parent>d100b</parent>
						<anchor>right</anchor>
						<offset>5</offset>
					</left>
					<size>
						<width>100</width>
						<height>50</height>
					</size>
				</anchored>
				<icon>d100_base</icon>
				<dietype>HighOpenEnded</dietype>
				<script file="desktop/scripts/desktoppanel_d100.lua" />
			</genericcontrol>
		</sheetdata>
	</windowclass>

	<windowclass name="dicetower">
		<noclose />
		<sheetdata>
			<genericcontrol>
				<tooltip>
					<text>Dice Tower</text>
				</tooltip>
				<bounds>0,0,90,90</bounds>
				<frame>
					<name>dicetower_normal</name>
				</frame>
				<sizelimits>
					<minimum>
						<height>90</height>
						<width>90</width>
					</minimum>
					<maximum>
						<height>90</height>
						<width>90</width>
					</maximum>
				</sizelimits>
				<noclose />
				<droptypes>
					<type>dice</type>
					<type>Hotkey:SkillRoll</type>
					<type>Hotkey:MMSkillRoll</type>
					<type>Hotkey:StatRoll</type>
					<type>Hotkey:RR</type>
					<type>number</type>
					<type>string</type>
					<type>fullattack</type>
				</droptypes>
				<stateframe>
					<drophover>
						<name>dicetower_drop</name>
						<nobaseframe />
					</drophover>
				</stateframe>
				<script>
					function onInit()
						DiceTowerManager.registerControl(self);
					end
					
					function onDrop(x, y, draginfo)
						return DiceTowerManager.onDrop(draginfo);
					end
				</script>
			</genericcontrol>
		</sheetdata>
	</windowclass>
	<windowclass name="HARPModifiers">
		<frame>indexbox</frame>
		<sizelimits>
			<minimum>
				<height>80</height>
				<width>120</width>
			</minimum>
		</sizelimits>
		<noclose />
		<script>
			function addDifficultyModifier(sDifficulty, iMod)
				local mods = ModifierStack.getModifiers();
				local newmods = {};
				for i = 1, #mods do
					if string.find(mods[i].description, "Difficulty: ", 1) == nil then
						table.insert(newmods,mods[i]);
					end
				end
				ModifierStack.reset();
				for i = 1, #newmods do
					ModifierStack.addSlot(newmods[i].description, newmods[i].value);
				end
				ModifierStack.addSlot("Difficulty: " .. sDifficulty, iMod);
			end
		</script>
		<sheetdata>
			<buttoncontrol name="routine">
				<anchored>
					<top>
						<anchor>top</anchor>
						<offset>17</offset>
					</top>
					<left>
						<anchor>left</anchor>
						<offset>25</offset>
					</left>
					<size>
						<width>45</width>
						<height>45</height>
					</size>
				</anchored>
				<icon>
					<normal>routine</normal>
				</icon>
				<tooltip>
					<text>Routine</text>
				</tooltip>
				<script>
					function onButtonPress()
						window.addDifficultyModifier("Routine", 60);
					end
				</script>
			</buttoncontrol>
			<buttoncontrol name="easy">
				<anchored>
					<top>
						<parent>routine</parent>
						<anchor>top</anchor>
					</top>
					<left>
						<parent>routine</parent>
						<anchor>right</anchor>
						<offset>5</offset>
					</left>
					<size>
						<width>45</width>
						<height>45</height>
					</size>
				</anchored>
				<icon>
					<normal>easy</normal>
				</icon>
				<tooltip>
					<text>Easy</text>
				</tooltip>
				<script>
					function onButtonPress()
						window.addDifficultyModifier("Easy", 40);
					end
				</script>
			</buttoncontrol>
			<buttoncontrol name="light">
				<anchored>
					<top>
						<parent>easy</parent>
						<anchor>top</anchor>
					</top>
					<left>
						<parent>easy</parent>
						<anchor>right</anchor>
						<offset>5</offset>
					</left>
					<size>
						<width>45</width>
						<height>45</height>
					</size>
				</anchored>
				<icon>
					<normal>light</normal>
				</icon>
				<tooltip>
					<text>Light</text>
				</tooltip>
				<script>
					function onButtonPress()
						window.addDifficultyModifier("Light", 20);
					end
				</script>
			</buttoncontrol>
			<buttoncontrol name="medium">
				<anchored>
					<top>
						<parent>light</parent>
						<anchor>top</anchor>
					</top>
					<left>
						<parent>light</parent>
						<anchor>right</anchor>
						<offset>5</offset>
					</left>
					<size>
						<width>45</width>
						<height>45</height>
					</size>
				</anchored>
				<icon>
					<normal>medium</normal>
				</icon>
				<tooltip>
					<text>Medium</text>
				</tooltip>
				<script>
					function onButtonPress()
						window.addDifficultyModifier("Medium", 0);
					end
				</script>
			</buttoncontrol>
			<buttoncontrol name="hard">
				<anchored>
					<top>
						<parent>medium</parent>
						<anchor>top</anchor>
					</top>
					<left>
						<parent>medium</parent>
						<anchor>right</anchor>
						<offset>5</offset>
					</left>
					<size>
						<width>45</width>
						<height>45</height>
					</size>
				</anchored>
				<icon>
					<normal>hard</normal>
				</icon>
				<tooltip>
					<text>Hard</text>
				</tooltip>
				<script>
					function onButtonPress()
						window.addDifficultyModifier("Hard", -20);
					end
				</script>
			</buttoncontrol>
			<buttoncontrol name="vhard">
				<anchored>
					<top>
						<parent>hard</parent>
						<anchor>top</anchor>
					</top>
					<left>
						<parent>hard</parent>
						<anchor>right</anchor>
						<offset>5</offset>
					</left>
					<size>
						<width>45</width>
						<height>45</height>
					</size>
				</anchored>
				<icon>
					<normal>vhard</normal>
				</icon>
				<tooltip>
					<text>Very Hard</text>
				</tooltip>
				<script>
					function onButtonPress()
						window.addDifficultyModifier("Very Hard", -40);
					end
				</script>
			</buttoncontrol>
			<buttoncontrol name="ehard">
				<anchored>
					<top>
						<parent>vhard</parent>
						<anchor>top</anchor>
					</top>
					<left>
						<parent>vhard</parent>
						<anchor>right</anchor>
						<offset>5</offset>
					</left>
					<size>
						<width>45</width>
						<height>45</height>
					</size>
				</anchored>
				<icon>
					<normal>ehard</normal>
				</icon>
				<tooltip>
					<text>Extremely Hard</text>
				</tooltip>
				<script>
					function onButtonPress()
						window.addDifficultyModifier("Extremely Hard", -60);
					end
				</script>
			</buttoncontrol>
			<buttoncontrol name="folly">
				<anchored>
					<top>
						<parent>ehard</parent>
						<anchor>top</anchor>
					</top>
					<left>
						<parent>ehard</parent>
						<anchor>right</anchor>
						<offset>5</offset>
					</left>
					<size>
						<width>45</width>
						<height>45</height>
					</size>
				</anchored>
				<icon>
					<normal>folly</normal>
				</icon>
				<tooltip>
					<text>Sheer Folly</text>
				</tooltip>
				<script>
					function onButtonPress()
						window.addDifficultyModifier("Sheer Folly", -80);
					end
				</script>
			</buttoncontrol>
			<buttoncontrol name="absurd">
				<anchored>
					<top>
						<parent>folly</parent>
						<anchor>top</anchor>
					</top>
					<left>
						<parent>folly</parent>
						<anchor>right</anchor>
						<offset>5</offset>
					</left>
					<size>
						<width>45</width>
						<height>45</height>
					</size>
				</anchored>
				<icon>
					<normal>absurd</normal>
				</icon>
				<tooltip>
					<text>Absurd</text>
				</tooltip>
				<script>
					function onButtonPress()
						window.addDifficultyModifier("Absurd", -100);
					end
				</script>
			</buttoncontrol>
		</sheetdata>
	</windowclass>
</root>